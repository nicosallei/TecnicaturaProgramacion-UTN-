/*
 * usuario_lista.java
 *
 * Created on 24 de agosto de 2009, 13:29
 */
package vista;

import controlador.GestorTabla;
import controlador.GestorUsuario;
import java.sql.ResultSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;

/**
 *
 * @author  0535
 */
public class usuario_lista extends javax.swing.JFrame {

    private DefaultTableModel listaUsuarios;

    /** Creates new form usuario_lista */
    public usuario_lista() {
        try {
            initComponents();
            //configuro el encabezado de la tabla
            configTabla();
            //modelo = new DefaultTableModel();
            // Se comienza.
            //creo el gestor persona
            GestorUsuario gu = new GestorUsuario();
            //obtengo las personas en base de datos
            List<Usuario> usuarios = gu.dameListaUsuarios();
            GestorTabla.anhadeFilasDeDatos(usuarios, listaUsuarios);
            //seteo el modelo de datos a la tablaCliente
            tablaUsuarios.setModel(listaUsuarios);
            //oculto el campo id de la tablaCliente
            tablaUsuarios.getColumnModel().removeColumn(tablaUsuarios.getColumnModel().getColumn(0));
            tablaUsuarios.getColumnModel().removeColumn(tablaUsuarios.getColumnModel().getColumn(2));
            tablaUsuarios.getColumnModel().removeColumn(tablaUsuarios.getColumnModel().getColumn(2));
            gu.cerrarConexion();

        } catch (Exception ex) {
            Logger.getLogger(persona_lista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void actualizarTabla(){
         GestorUsuario gu = new GestorUsuario();
         List<Usuario> usuarios = gu.dameListaUsuarios();
         GestorTabla.rellena(usuarios, listaUsuarios);
         gu.cerrarConexion();
    }
    private void configTabla() {
        listaUsuarios = new DefaultTableModel();
        listaUsuarios.addColumn("id");
        listaUsuarios.addColumn("Usuario");
        listaUsuarios.addColumn("Clave");
        listaUsuarios.addColumn("idpersona");
        listaUsuarios.addColumn("idperfil");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        bt_cerrar = new javax.swing.JButton();
        bt_agregar = new javax.swing.JButton();
        bt_modificar = new javax.swing.JButton();
        bt_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        bt_cerrar.setText("Cerrar");
        bt_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cerrarActionPerformed(evt);
            }
        });

        bt_agregar.setText("Agregar");
        bt_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarActionPerformed(evt);
            }
        });

        bt_modificar.setText("Modificar");
        bt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarActionPerformed(evt);
            }
        });

        bt_eliminar.setText("Eliminar");
        bt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(bt_agregar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(bt_modificar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(bt_eliminar)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(bt_cerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bt_agregar)
                    .add(bt_modificar)
                    .add(bt_eliminar))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bt_cerrar)
                .add(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void bt_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cerrarActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_bt_cerrarActionPerformed

private void bt_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarActionPerformed
// TODO add your handling code here:
    new usuario_admin(this, false, new Long(-1)).setVisible(true);
}//GEN-LAST:event_bt_agregarActionPerformed

private void bt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarActionPerformed
// TODO add your handling code here:
    int filaSeleccionada = tablaUsuarios.getSelectedRow();//numero fila seleccionada
    int columnaSeleccionada = tablaUsuarios.getSelectedColumn();//numero de columna seleccionada NO ME INTERESA

    try {
        if (filaSeleccionada == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un usuario de la lista", "Error", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            Long valorId = (Long) listaUsuarios.getValueAt(filaSeleccionada, 0);
            new usuario_admin(this, true, valorId).setVisible(true);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_bt_modificarActionPerformed

private void bt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarActionPerformed
// TODO add your handling code here:
        int filaSeleccionada = tablaUsuarios.getSelectedRow();
        int columnaSeleccionada = tablaUsuarios.getSelectedColumn();
        
        try{
        if (filaSeleccionada == -1) { 
        javax.swing.JOptionPane.showMessageDialog(this,"Seleccione un cliente de la lista","Error",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }else{
        Long valorId = (Long)listaUsuarios.getValueAt(filaSeleccionada, 0);
        System.out.println(valorId);
        
        GestorUsuario gu = new GestorUsuario();
        gu.eliminarUsuario(valorId);
        actualizarTabla();
        gu.cerrarConexion();
        }
        }catch(Exception e){
            e.printStackTrace();
        }
}//GEN-LAST:event_bt_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_agregar;
    private javax.swing.JButton bt_cerrar;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JButton bt_modificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
