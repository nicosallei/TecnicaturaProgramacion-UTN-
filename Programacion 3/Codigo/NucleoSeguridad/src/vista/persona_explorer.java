/*
 * persona_explorer.java
 *
 * Created on 24 de agosto de 2009, 13:21
 */
package vista;

import controlador.GestorPersona;
import controlador.GestorTabla;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.Persona;

/**
 *
 * @author  0535
 */
public class persona_explorer extends javax.swing.JFrame {

    private DefaultTableModel listaPersonas;
    private usuario_admin usuarioAdmin;

    /** Creates new form persona_explorer */
    public persona_explorer(usuario_admin usuarioAdmin) {
        this.usuarioAdmin = usuarioAdmin;
        try {
            initComponents();

            txtDni.addKeyListener(new KeyAdapter() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char caracter = e.getKeyChar();

                    // Verificar tecla ENTER
                    if (caracter == KeyEvent.VK_ENTER) {
                        GestorPersona gp = new GestorPersona();
                        List<Persona> personas = gp.buscarPorDNI(new Long(txtDni.getText()));
                        GestorTabla.anhadeFilasDeDatos(personas, listaPersonas);
                        tablaPersona.setModel(listaPersonas);
                        gp.cerrarConexion();
                    }
                }
            });
            txtApellido.addKeyListener(new KeyAdapter() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char caracter = e.getKeyChar();

                    // Verificar tecla ENTER
                    if (caracter == KeyEvent.VK_ENTER) {
                        GestorPersona gp = new GestorPersona();
                        List<Persona> personas = gp.buscarPorApellido(txtApellido.getText());
                        GestorTabla.anhadeFilasDeDatos(personas, listaPersonas);
                        tablaPersona.setModel(listaPersonas);
                        gp.cerrarConexion();
                    }
                }
            });

            configTabla();
            //modelo = new DefaultTableModel();
            // Se comienza.
            //creo el gestor persona
            GestorPersona gp = new GestorPersona();
            //obtengo las personas en base de datos
            List<Persona> personas = gp.dameListaPersonas();
            GestorTabla.anhadeFilasDeDatos(personas, listaPersonas);

            //seteo el modelo de datos a la tablaCliente
            tablaPersona.setModel(listaPersonas);
            //oculto el campo id de la tablaCliente
            tablaPersona.getColumnModel().removeColumn(tablaPersona.getColumnModel().getColumn(0));
            tablaPersona.getColumnModel().removeColumn(tablaPersona.getColumnModel().getColumn(3));
            gp.cerrarConexion();
        } catch (Exception e) {
        }
    }

    private persona_explorer() {
        initComponents();
    }

    private void configTabla() {
        listaPersonas = new DefaultTableModel();
        listaPersonas.addColumn("id");
        listaPersonas.addColumn("Nombre");
        listaPersonas.addColumn("Apellido");
        listaPersonas.addColumn("DNI");
        listaPersonas.addColumn("iddomicilio");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersona = new javax.swing.JTable();
        btCerrar = new javax.swing.JButton();
        btSeleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DNI");

        jLabel2.setText("Apellido");

        tablaPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPersona);

        btCerrar.setText("Cerrar");
        btCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCerrarActionPerformed(evt);
            }
        });

        btSeleccionar.setText("Seleccionar");
        btSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(txtDni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(txtApellido, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btSeleccionar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(btCerrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtDni, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(txtApellido, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btCerrar)
                    .add(btSeleccionar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCerrarActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_btCerrarActionPerformed

private void btSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarActionPerformed
// TODO add your handling code here:
    int filaSeleccionada = tablaPersona.getSelectedRow();//numero fila seleccionada

    try {
        if (filaSeleccionada == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un cliente de la lista", "Error", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            Long valorId = (Long) listaPersonas.getValueAt(filaSeleccionada, 0);
            String nombre = (String) listaPersonas.getValueAt(filaSeleccionada, 1);
            String apellido = (String) listaPersonas.getValueAt(filaSeleccionada, 2);
            usuarioAdmin.denominacionPersona = nombre + " " + apellido;
            usuarioAdmin.idPersona = Long.toString(valorId);
            usuarioAdmin.cargarPersona();
            this.setVisible(false);

        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_btSeleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCerrar;
    private javax.swing.JButton btSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPersona;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDni;
    // End of variables declaration//GEN-END:variables
}
